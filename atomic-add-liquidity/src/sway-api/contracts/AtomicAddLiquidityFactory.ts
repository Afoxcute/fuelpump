/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.8
  Forc version: 0.60.0
  Fuel-Core version: 0.26.0
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { AtomicAddLiquidity } from "./AtomicAddLiquidity";

const bytecode = decompressBytecode("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");

export class AtomicAddLiquidityFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, AtomicAddLiquidity.abi, accountOrProvider);
  }

  deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: AtomicAddLiquidity.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<AtomicAddLiquidity>> {
    const factory = new AtomicAddLiquidityFactory(wallet);
    return factory.deploy(options);
  }
}
