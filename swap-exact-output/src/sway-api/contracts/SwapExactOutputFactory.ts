/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.8
  Forc version: 0.60.0
  Fuel-Core version: 0.26.0
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { SwapExactOutput } from "./SwapExactOutput";

const bytecode = decompressBytecode("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");

export class SwapExactOutputFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, SwapExactOutput.abi, accountOrProvider);
  }

  deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: SwapExactOutput.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<SwapExactOutput>> {
    const factory = new SwapExactOutputFactory(wallet);
    return factory.deploy(options);
  }
}
